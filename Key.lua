local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- üü¢ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Key ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
local userKey = getgenv().key or ""
if userKey == "" then
    return warn("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ getgenv().key ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå")
end

-- üü¢ UserId ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
local player = Players.LocalPlayer
local userId = player.UserId

-- üü¢ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Service ‡πÅ‡∏•‡∏∞ Panda API Key
local serviceName = "MyRobloxService" -- ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠ Service ‡∏à‡∏£‡∏¥‡∏á
local apiKey = "4d6360878bd4d246723b4cbd40636852575ffde272cad24d348c37170e45c74e"

-- üü¢ URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö validate Key
local url = string.format(
    "https://api.pandadevelopment.net/validate?service=%s&key=%s&api=%s&user=%s",
    serviceName,
    userKey,
    apiKey
)

-- üü¢ ‡∏™‡πà‡∏á request ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Key
local success, response = pcall(function()
    return game:HttpGet(url)
end)

if not success then
    return warn("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Panda API ‡πÑ‡∏î‡πâ: " .. tostring(response))
end

-- üü¢ ‡πÅ‡∏õ‡∏•‡∏á response
local result
local ok = pcall(function()
    -- ‡∏•‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á JSON
    result = HttpService:JSONDecode(response)
end)

-- üü¢ ‡∏ñ‡πâ‡∏≤ JSONDecode ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ plain text
if not ok or type(result) ~= "table" then
    result = {}
    result.status = (response:lower():find("valid") and "valid") or "invalid"
    result.message = response
end

-- üü¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•
if result.status == "valid" then
    print("‚úÖ Key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡πÇ‡∏´‡∏•‡∏î money.lua ‚Ä¶")
    local code = game:HttpGet("https://raw.githubusercontent.com/Ecohub-1/Ecohub-1/refs/heads/main/money.lua")
    loadstring(code)()
else
    warn("‚ùå Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á / ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏î‡∏¢‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô: " .. (result.message or "unknown"))
end
